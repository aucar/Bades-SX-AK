; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{8E162D99-8580-4244-A367-6A56DE41CA6B}
AppName=Bades SX AK
AppVersion=1.2
;AppVerName=Bades SX AK 1.0
AppPublisher=Ahmet Ucar
AppPublisherURL=https://sourceforge.net/projects/badessxak/
AppSupportURL=https://sourceforge.net/projects/badessxak/
AppUpdatesURL=https://sourceforge.net/projects/badessxak/
DefaultDirName={pf}\Bades SX AK
DefaultGroupName=Bades SX AK
AllowNoIcons=yes
LicenseFile=V:\PROJECTS\BADES SVN\lisans.txt
OutputBaseFilename=Bades SX AK Setup
SetupIconFile=V:\PROJECTS\BADES SVN\trunk\icon.ico
Compression=lzma
SolidCompression=yes
PrivilegesRequired=none

[Languages]
;Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "turkce"; MessagesFile: "compiler:turkish-3-5.1.11.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[Files]
Source: "V:\PROJECTS\BADES SVN\trunk\bin\Release\Bades SX AK.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "V:\PROJECTS\BADES SVN\trunk\bin\Release\Bades SX AK.application"; DestDir: "{app}"; Flags: ignoreversion
Source: "V:\PROJECTS\BADES SVN\trunk\bin\Release\Bades SX AK.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "V:\PROJECTS\BADES SVN\trunk\bin\Release\Bades SX AK.exe.manifest"; DestDir: "{app}"; Flags: ignoreversion
Source: "V:\PROJECTS\BADES SVN\trunk\bin\Release\Bades SX AK.pdb"; DestDir: "{app}"; Flags: ignoreversion
Source: "V:\PROJECTS\BADES SVN\Bades-Deneme.xml"; DestDir: "{app}"; Flags: ignoreversion

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\Bades SX AK"; Filename: "{app}\Bades SX AK.exe"
Name: "{group}\{cm:ProgramOnTheWeb,Bades SX AK}"; Filename: "https://sourceforge.net/projects/badessxak/"
Name: "{group}\{cm:UninstallProgram,Bades SX AK}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\Bades SX AK"; Filename: "{app}\Bades SX AK.exe"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\Bades SX AK"; Filename: "{app}\Bades SX AK.exe"; Tasks: quicklaunchicon

[Run]
Filename: "{app}\Bades SX AK.exe"; Description: "{cm:LaunchProgram,Bades SX AK}"; Flags: nowait postinstall skipifsilent

[Code]

const
    dotnetURL = 'http://www.microsoft.com/downloads/en/details.aspx?FamilyID=5765d7a8-7722-4888-a970-ac39b33fd8ab';


function IsDotNetDetected(version: string; service: cardinal): boolean;
// Indicates whether the specified version and service pack of the .NET Framework is installed.
//
// version -- Specify one of these strings for the required .NET Framework version:
//    'v1.1.4322'     .NET Framework 1.1
//    'v2.0.50727'    .NET Framework 2.0
//    'v3.0'          .NET Framework 3.0
//    'v3.5'          .NET Framework 3.5
//    'v4\Client'     .NET Framework 4.0 Client Profile
//    'v4\Full'       .NET Framework 4.0 Full Installation
//
// service -- Specify any non-negative integer for the required service pack level:
//    0               No service packs required
//    1, 2, etc.      Service pack 1, 2, etc. required
var
    key: string;
    install, serviceCount: cardinal;
    success: boolean;
begin
    key := 'SOFTWARE\Microsoft\NET Framework Setup\NDP\' + version;
    // .NET 3.0 uses value InstallSuccess in subkey Setup
    if Pos('v3.0', version) = 1 then begin
        success := RegQueryDWordValue(HKLM, key + '\Setup', 'InstallSuccess', install);
    end else begin
        success := RegQueryDWordValue(HKLM, key, 'Install', install);
    end;
    // .NET 4.0 uses value Servicing instead of SP
    if Pos('v4', version) = 1 then begin
        success := success and RegQueryDWordValue(HKLM, key, 'Servicing', serviceCount);
    end else begin
        success := success and RegQueryDWordValue(HKLM, key, 'SP', serviceCount);
    end;
    result := success and (install = 1) and (serviceCount >= service);
end;

function InitializeSetup(): Boolean;
var
  errCode : integer;
  
begin
    if not IsDotNetDetected('v4\Client', 0) then begin
        MsgBox('Bu uygulama Microsoft .NET Framework 4.0 Client Profile uygulamasýnýn yüklü olmasýný gerektirir.'#13#13
            'Lütfen açýlan pencereden bu uygulamayý indirerek kurun ve bu kurulum dosyasýný tekrar çalýþtýrýn.', mbInformation, MB_OK);

        ShellExec('Open', dotnetURL, '', '', SW_SHOW, ewNoWait, errCode);
        result := false;
    end else
        result := true;
end;
